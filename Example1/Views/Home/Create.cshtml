@model ClassLibrary1.Repository.Entity.Employee2

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div>
        <div class="col-md-6">
            <div class="ImageContainer">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Upload Image</label>
                        <div class="input-group">
                            <span class="input-group-btn">
                                <span class="btn btn-default btn-file">
                                    Browse… <input type="file" id="imgInp">
                                </span>
                            </span>
                            <input type="text" class="form-control" readonly>
                        </div>
                        <img id='img-upload' />
                    </div>
                </div>
            </div>
        
       </div>
        <div class="col-md-6">
            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="Name">Marital Status </label>

                    <div class="col-md-10">
                        @Html.CheckBoxFor(x => x.MaritalStatus, true)
                        @Html.LabelFor(Model => Model.MaritalStatus, "Married")
                        &nbsp;
                        &nbsp;
                        @Html.CheckBoxFor(x => x.MaritalStatus, false)
                        @Html.LabelFor(Model => Model.MaritalStatus, "UnMarried")
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.State,
              new SelectList(ViewBag.StateList, "StateId", "State"),
              "Select state",
              new { @class = "form-control", @onchange = "FillCity()" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.City,
       new SelectList(Enumerable.Empty<SelectListItem>(), "CityId", "CityName"),
              "Select city",
              new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    <div>
                        @Html.LabelFor(m => m.Image)
                        @Html.EditorFor(m => m.Image)
                    </div>
                    <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                </div>*@


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="reset" value="Reset" class="btn btn-lg btn-default" style="border-radius:0%;border:1px solid black;" /> &nbsp;&nbsp; 
                         <input type="submit" value="Add Employee" class="btn btn-primary btn-lg" style="border-radius:0%;border:1px solid #357ebd;" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}

<div>
    @Html.ActionLink("Back to Home", "Index",null,new { @class="btn btn-primary" , style="float:left;" })
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
  function FillCity() {
    var stateId = $('#State').val();
    $.ajax({
        url: '/Home/FillCity',
        type: "GET",
        dataType: "JSON",
        data: { State: stateId},    
        success: function (cities) {
            
            $("#City").html(""); // clear before appending new list
            console.log(City);
            $.each(cities, function (i, city) {
                $("#City").append(
                    $('<option></option>').val(city.CityId).html(city.CityName)); console.log(cities);
            });
        }
    });
  }

    //image
  $(document).ready(function () {
      $(document).on('change', '.btn-file :file', function () {
          var input = $(this),
              label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
          input.trigger('fileselect', [label]);
      });

      $('.btn-file :file').on('fileselect', function (event, label) {

          var input = $(this).parents('.input-group').find(':text'),
              log = label;

          if (input.length) {
              input.val(log);
          } else {
              if (log) alert(log);
          }

      });
      function readURL(input) {
          if (input.files && input.files[0]) {
              var reader = new FileReader();

              reader.onload = function (e) {
                  $('#img-upload').attr('src', e.target.result);
              }

              reader.readAsDataURL(input.files[0]);
          }
      }

      $("#imgInp").change(function () {
          readURL(this);
      });
  });


</script>
